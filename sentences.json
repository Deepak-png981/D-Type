[
    "const sum = (a, b) => a + b;",
    "let array = [1, 2, 3, 4].filter(num => num % 2 === 0);",
    "document.getElementById('demo').innerHTML = 'Hello World!';",
    "console.log('Hello, world!');",
    "function factorial(n) { return n != 1 ? n * factorial(n - 1) : 1; }",
    "let obj = { name: 'Deepak Joshi', age: 30, city: 'New Delhi' };",
    "setTimeout(() => { console.log('This is a delayed message'); }, 3000);",
    "let squaredNumbers = numbers.map(num => num * num);",
    "if (navigator.geolocation) { navigator .geolocation.getCurrentPosition(showPosition); }",
    "addEventListener('click',function(event){event.preventDefault();});",
    "num => { for(let i = 2, s = Math.sqrt(num); i <= s; i++) if(num % i === 0) return false; return num > 1; };",
    "class Developer { constructor(name) { this.name = name; } code() { console.log('Coding...'); } }",
    "Array.from(document.querySelectorAll('.item')) .forEach(item => console.log(item));",
    "Promise.resolve('Success').then(value => console.log(value), error => console.error(error));",
    "async function fetchData() { const response = await fetch('/api/data'); return response.json(); }",
    "let { firstName, lastName } = { firstName: 'John', lastName: 'Doe' };",
    "try { someFunctionThatMightThrow(); } catch (error) { console.error(error); }",
    "for (const value of Object.values(obj)) { console.log(value); }",
    "const double = x => x * 2; const scores = [1, 2, 3].map(double);",
    "process.env.NODE_ENV === 'development' && console.log('Dev mode on');",
    "const greet = name => `Hello, ${name}!`; console.log(greet('Alice'));",
    "fetch('/api/get-data', { method: 'GET' }).then(response => response.json()).then(data => console.log(data));",
    "React.useEffect(() => { document.title = 'New Title'; }, []);",
    "module.exports = { sum, factorial };",
    "const PORT = process.env.PORT || 3000; app.listen(PORT, () => console.log(`Server running on port ${PORT}`));",
    "const [user, setUser] = React.useState(null);",
    "docker build -t my-app . && docker run -dp 3000:3000 my-app",
    "const jwt = require('jsonwebtoken'); const token = jwt.sign({ user: 'johndoe' }, 'shhhhh');",
    "SELECT * FROM users WHERE status = 'active';",
    "const theme = useTheme(); return <Button color={theme.primary}>Click me</Button>;"
]